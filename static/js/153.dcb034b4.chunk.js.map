{"version":3,"file":"static/js/153.dcb034b4.chunk.js","mappings":"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","sources":["webpack://social_network/./src/components/ProfilePage/ShitPosts/Post/Post.module.css?e54f","components/ProfilePage/ShitPosts/Post/Post.tsx","webpack://social_network/./src/components/ProfilePage/ProfileInfo/ProfileInfo.module.css?3767","components/ProfilePage/ProfileInfo/ProfileStatus/ProfileStatus.tsx","components/ProfilePage/ProfileInfo/ProfileStatus/ProfileStatusContainer.tsx","webpack://social_network/./src/components/ProfilePage/ProfileInfo/Modal/Modal.module.css?b7a0","components/ProfilePage/ProfileInfo/Modal/AvatarModal.tsx","components/ProfilePage/ProfileInfo/Modal/AboutMeModal.tsx","components/ProfilePage/ProfileInfo/ProfileInfo.tsx","components/ProfilePage/ShitPosts/ShitPost.tsx","components/ProfilePage/ShitPosts/ShitPostContainer.tsx","components/ProfilePage/ProfilePage.tsx","components/ProfilePage/ProfilePageContainer.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Post\":\"Post_Post__9dhvE\"};","import React from 'react';\nimport c from './Post.module.css';\nimport { PostsType } from '../../../../types/globalInterface';\n\n\n\nconst Post = React.memo(({ Posts } : {Posts: PostsType}) => {\n  let post = Posts.map(({ id, text }) => (\n    <pre className={c.Post} key={id}>\n      {text}\n    </pre>\n  ));\n  return <div>{post}</div>;\n});\n\nexport default Post;\n","// extracted by mini-css-extract-plugin\nexport default {\"ProfilePage\":\"ProfileInfo_ProfilePage__mT4bG\",\"Ava\":\"ProfileInfo_Ava__bOTl3\",\"Name\":\"ProfileInfo_Name__0APBB\",\"AboutMe\":\"ProfileInfo_AboutMe__qmQ8l\"};","import React, { useEffect, useState } from 'react';\n\ninterface ProfileStatusProps {\n  confirmStatusChanges: (inputValue: string) => void;\n  cancelStatusChanges: () => void;\n  editMode: boolean;\n  status: string;\n  setEditMode: React.Dispatch<React.SetStateAction<boolean>>;\n  authUserId: number;\n  currentUserId: string;\n}\n\nexport const ProfileStatus: React.FC<ProfileStatusProps> = ({\n  confirmStatusChanges,\n  cancelStatusChanges,\n  editMode,\n  status,\n  setEditMode,\n  authUserId,\n  currentUserId,\n}) => {\n  const [inputValue, setInputValue] = useState('');\n\n  useEffect(() => {\n    if (editMode) {\n      setInputValue(status);\n    } else {\n      setInputValue('');\n    }\n  }, [editMode, status]);\n\n  const eventListener = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    if (e.key === 'Enter') {\n      confirmStatusChanges(inputValue);\n    } else if (e.key === 'Escape') {\n      cancelStatusChanges();\n    }\n  };\n\n  const onStatusClick = () => {\n    if (+currentUserId === authUserId) {\n      setEditMode(!editMode);\n    }\n  };\n\n  return (\n    <>\n      {!editMode ? (\n        <span onDoubleClick={onStatusClick}>\n          {status ? status : 'Show your status here'}\n        </span>\n      ) : (\n        <input\n          type=\"text\"\n          autoFocus={true}\n          onBlur={() => confirmStatusChanges(inputValue)}\n          onChange={(e) => {\n            setInputValue(e.target.value);\n          }}\n          value={inputValue}\n          onKeyDown={(e) => eventListener(e)}\n        ></input>\n      )}\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { ProfileStatus } from './ProfileStatus';\nimport { axiosGetStatus, axiosPutStatus } from '../../../../API/API';\nimport { useParams } from 'react-router-dom';\nimport { useAuth } from '../../../../react/customHooks/CustomHooks';\nimport Loader from '../../../Loader/Loader';\n\nexport const ProfileStatusContainer = () => {\n  const [editMode, setEditMode] = useState(false);\n  const [status, setStatus] = useState('');\n  const { id } = useParams();\n  const { user } = useAuth();\n\n  useEffect(() => {\n    if (!id) {\n      return;}\n    axiosGetStatus(id).then((data) => {\n      setStatus(data ? data : '');\n    });\n  }, [id]);\n\n  const confirmStatusChanges = (inputValue: string) => {\n    setStatus(inputValue);\n    setEditMode(false);\n    axiosPutStatus(inputValue);\n  };\n\n  const cancelStatusChanges = () => {\n    setEditMode(false);\n  };\n\n  if (!user) {\n    return <Loader />;\n  }\n\n  return (\n    <ProfileStatus\n      confirmStatusChanges={confirmStatusChanges}\n      cancelStatusChanges={cancelStatusChanges}\n      editMode={editMode}\n      status={status}\n      setEditMode={setEditMode}\n      authUserId={user.id}\n      currentUserId={id?id:''}\n    />\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Main\":\"Modal_Main__rXzn0\",\"Forms\":\"Modal_Forms__ljSG6\"};","import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport c from './Modal.module.css';\n\ninterface AvatarModalProps {\n  setIsModalAvatarOpen?: (data: boolean) => void;\n  isModalAvatarOpen?: boolean;\n  putNewPhoto?: (data: any) => void;\n}\n\nexport const AvatarModal: React.FC<AvatarModalProps> = ({\n  setIsModalAvatarOpen,\n  isModalAvatarOpen,\n  putNewPhoto,\n}) => {\n  Modal.setAppElement('#root');\n\n  const [formData, setFormData] = useState<FormData>(new FormData());\n\n  const closeModal = () => {\n    if (!setIsModalAvatarOpen) {\n      return;\n    }\n    setIsModalAvatarOpen(false);\n  };\n\n  const onSubmit = () => {\n    if (!putNewPhoto) {\n      return;\n    }\n    putNewPhoto(formData);\n  };\n\n  const handleLargeFileChange = (event: any) => {\n    const formData = new FormData();\n    const file = event.target.files[0];\n    formData.append('image', file);\n    setFormData(formData);\n  };\n\n  if (!isModalAvatarOpen) {\n    return null;\n  }\n\n  return (\n    <Modal\n      className={c.Main}\n      isOpen={isModalAvatarOpen}\n      onRequestClose={closeModal}\n      contentLabel=\"Окошко для смены аватара\"\n    >\n      <div className={c.Forms}>\n        <label htmlFor=\"large\">Большой аватар: </label>\n        <input name=\"large\" type=\"file\" onChange={handleLargeFileChange} />\n        <button disabled={!formData} type=\"submit\" onClick={onSubmit}>\n          Сохранить\n        </button>\n      </div>\n      <div className={c.Forms}>\n        <button onClick={closeModal}>Закрыть</button>\n      </div>\n    </Modal>\n  );\n};\n","import React from 'react';\nimport { Field, InjectedFormProps, reduxForm } from 'redux-form';\nimport Modal from 'react-modal';\nimport c from './Modal.module.css';\n\ninterface AboutMeModalProps {\n  isModalAboutMeOpen?: boolean;\n  setIsModalAboutMeOpen?: (data: boolean) => void;\n  putInfoAboutMe?: (data: any) => void;\n}\n\nconst AboutMeModal = ({\n  isModalAboutMeOpen,\n  setIsModalAboutMeOpen,\n  putInfoAboutMe,\n  handleSubmit,\n}: InjectedFormProps<{}, AboutMeModalProps> & AboutMeModalProps) => {\n  Modal.setAppElement('#root');\n\n  const closeModal = () => {\n    if (!setIsModalAboutMeOpen) {\n      return;\n    }\n    setIsModalAboutMeOpen(false);\n  };\n\n  const onSubmit = (data: any) => {\n    if (!putInfoAboutMe) {\n      return;\n    }\n    putInfoAboutMe(data);\n  };\n\n  if (!isModalAboutMeOpen) {\n    return null;\n  }\n\n  return (\n    <Modal\n      className={c.Main}\n      isOpen={isModalAboutMeOpen}\n      onRequestClose={closeModal}\n      contentLabel=\"Окно для смены инфорации о себе\"\n    >\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className={c.Forms}>\n          <label htmlFor=\"fullName\">Имя: </label>\n          <Field component=\"input\" name=\"fullName\" type=\"text\" />\n        </div>\n        <div className={c.Forms}>\n          <label htmlFor=\"lookingForAJob\">Ищу работу: </label>\n          <Field component=\"input\" name=\"lookingForAJob\" type=\"checkbox\" />\n        </div>\n        <div className={c.Forms}>\n          <label htmlFor=\"lookingForAJobDescription\">\n            Смотрю предложения о работе:\n          </label>\n          <Field\n            component=\"textarea\"\n            name=\"lookingForAJobDescription\"\n            type=\"text\"\n          />\n        </div>\n        <div className={c.Forms}>\n          <label htmlFor=\"aboutMe\">О себе: </label>\n          <Field component=\"textarea\" name=\"aboutMe\" type=\"text\" />\n        </div>\n        <div className={c.Forms}>\n          <label htmlFor=\"contacts\">Контакты: </label>\n          <div className={c.Forms}>\n            <label htmlFor=\"contacts.facebook\">Facebook: </label>\n            <Field name=\"contacts.facebook\" component=\"input\" type=\"text\" />\n          </div>\n          <div className={c.Forms}>\n            <label htmlFor=\"contacts.github\">Github: </label>\n            <Field name=\"contacts.github\" component=\"input\" type=\"text\" />\n          </div>\n          <div className={c.Forms}>\n            <label htmlFor=\"contacts.instagram\">Instagram: </label>\n            <Field name=\"contacts.instagram\" component=\"input\" type=\"text\" />\n          </div>\n          <div className={c.Forms}>\n            <label htmlFor=\"contacts.mainLink\">MainLink: </label>\n            <Field name=\"contacts.mainLink\" component=\"input\" type=\"text\" />\n          </div>\n          <div className={c.Forms}>\n            <label htmlFor=\"contacts.twitter\">Twitter: </label>\n            <Field name=\"contacts.twitter\" component=\"input\" type=\"text\" />\n          </div>\n          <div className={c.Forms}>\n            <label htmlFor=\"contacts.vk\">VK: </label>\n            <Field name=\"contacts.vk\" component=\"input\" type=\"text\" />\n          </div>\n          <div className={c.Forms}>\n            <label htmlFor=\"contacts.website\">Website: </label>\n            <Field name=\"contacts.website\" component=\"input\" type=\"text\" />\n          </div>\n          <div className={c.Forms}>\n            <label htmlFor=\"contacts.youtube\">Youtube: </label>\n            <Field name=\"contacts.youtube\" component=\"input\" type=\"text\" />\n          </div>\n        </div>\n        <div className={c.Forms}>\n          <button type=\"submit\">Сохранить</button>\n        </div>\n        <div className={c.Forms}>\n          <button onClick={closeModal}>Закрыть окно</button>\n        </div>\n      </form>\n    </Modal>\n  );\n};\n\nexport default reduxForm<{}, AboutMeModalProps>({\n  form: 'aboutMe',\n})(AboutMeModal);\n","import React from 'react';\nimport c from './ProfileInfo.module.css';\nimport UnfoundAva from '../../../img/avaUnfound.jpg';\nimport { ProfileStatusContainer } from './ProfileStatus/ProfileStatusContainer';\nimport { AvatarModal } from './Modal/AvatarModal';\nimport AboutMeModal from './Modal/AboutMeModal';\nimport { UserInfoType } from '../../../types/globalInterface';\nimport { AuthUser } from '../../../react/customHooks/CustomHooks';\n\ninterface ProfileInfoProps {\n  Users: UserInfoType\n  setIsModalAvatarOpen?: React.Dispatch<React.SetStateAction<boolean>>\n  isModalAvatarOpen?: boolean\n  putNewPhoto?: (data: FormData) => void\n  isModalAboutMeOpen?: boolean\n  setIsModalAboutMeOpen?: React.Dispatch<React.SetStateAction<boolean>>\n  putInfoAboutMe?: (data: FormData) => void\n  id: string\n  AuthUser: AuthUser\n}\n\nconst ProfileInfo: React.FC<ProfileInfoProps> = ({\n  Users,\n  setIsModalAvatarOpen,\n  isModalAvatarOpen,\n  putNewPhoto,\n  isModalAboutMeOpen,\n  setIsModalAboutMeOpen,\n  putInfoAboutMe,\n  id,\n  AuthUser\n}) => {\n  const UC = Users?.contacts;\n\n  const openModalAvatar = () => {\n    if (!setIsModalAvatarOpen) return;\n    setIsModalAvatarOpen(true);\n  };\n\n  const openModalAboutMe = () => {\n    if (!setIsModalAboutMeOpen) return;\n    setIsModalAboutMeOpen(true);\n  };\n\n  return (\n    <div className={c.ProfilePage}>\n      <div className={c.Ava}>\n        <img src={Users?.photos?.large ? Users?.photos.large : UnfoundAva} />\n        {+id === AuthUser.id ? (\n        <>\n          <AvatarModal\n            setIsModalAvatarOpen={setIsModalAvatarOpen}\n            isModalAvatarOpen={isModalAvatarOpen}\n            putNewPhoto={putNewPhoto}\n          />\n          <button onClick={openModalAvatar}>Change ava</button>\n        </>\n        ) : null}\n\n        <div>\n          <ProfileStatusContainer />\n        </div>\n      </div>\n      <div className={c.Name}>{Users?.fullName}</div>\n      <div className={c.AboutMe}>\n        <h3>{Users?.aboutMe ? 'О себе: ' : null}</h3>\n        <div>{Users?.aboutMe}</div>\n        <h4>{UC?.facebook ? 'Facebook: ' : null}</h4>\n        <div>{Users?.contacts.facebook}</div>\n        <h4>{UC?.website ? 'Website: ' : null}</h4>\n        <div>{Users?.contacts.website}</div>\n        <h4>{UC?.vk ? 'VK: ' : null}</h4>\n        <div>{Users?.contacts.vk}</div>\n        <h4>{UC?.twitter ? 'Twitter: ' : null}</h4>\n        <div>{Users?.contacts.twitter}</div>\n        <h4>{UC?.instagram ? 'Instagram: ' : null}</h4>\n        <div>{Users?.contacts.instagram}</div>\n        <h4>{UC?.youtube ? 'Youtube: ' : null}</h4>\n        <div>{Users?.contacts.youtube}</div>\n        <h4>{UC?.github ? 'Github: ' : null}</h4>\n        <div>{Users?.contacts.github}</div>\n        <h4>{UC?.mainLink ? 'Main link: ' : null}</h4>\n        <div>{Users?.contacts.mainLink}</div>\n        <h4>{Users?.lookingForAJob ? 'Ищю работу: ' : null}</h4>\n        <div>{Users?.lookingForAJob}</div>\n        <div>{Users?.lookingForAJobDescription}</div>\n\n        {+id === AuthUser.id ? (\n          <>\n            <AboutMeModal\n              isModalAboutMeOpen={isModalAboutMeOpen}\n              setIsModalAboutMeOpen={setIsModalAboutMeOpen}\n              putInfoAboutMe={putInfoAboutMe}\n              initialValues={Users}\n            />\n            <button onClick={openModalAboutMe}>Change info about me</button>\n          </>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default ProfileInfo;\n","import React from 'react';\nimport { useFormik } from 'formik';\n\ninterface ShitPostProps {\n  addPost: (data: { newPost: string }) => void;\n}\n\nconst ShitPost: React.FC<ShitPostProps> = ({ addPost }) => {\n  const formik = useFormik({\n    initialValues: {\n      newPost: '',\n    },\n    onSubmit: (values) => {\n      addPost(values);\n      formik.resetForm();\n    },\n  });\n  return (\n    <form onSubmit={formik.handleSubmit}>\n      <textarea\n        id=\"newPost\"\n        name=\"newPost\"\n        onChange={formik.handleChange}\n        value={formik.values.newPost}\n        placeholder=\"Добавьте свой новый ShitPost;)\"\n      />\n      <button disabled={!formik.dirty || formik.isSubmitting} type=\"submit\">\n        Add post\n      </button>\n    </form>\n  );\n};\n\nexport default ShitPost;\n","import { addNewPost } from '../../../redux/ProfilePageReducer';\nimport ShitPost from './ShitPost';\nimport { connect } from 'react-redux';\n\nlet mapStateToProps = (state: { ShitPosts: { newPostLetter: string } }) => {\n  return {\n    newPostLetter: state.ShitPosts.newPostLetter,\n  };\n};\n\nlet mapDispatchToProps = (dispatch: any) => {\n  return {\n    addPost: (data: {newPost: string}) => {\n      dispatch(addNewPost(data));\n    },\n  };\n};\n\nconst ShitPostContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n)(ShitPost);\n\nexport default ShitPostContainer;\n","import React from 'react';\nimport Post from './ShitPosts/Post/Post';\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\nimport ShitPostContainer from './ShitPosts/ShitPostContainer';\nimport Loader from '../Loader/Loader';\nimport { UserInfoType } from '../../types/globalInterface';\nimport { PostsType } from '../../types/globalInterface';\nimport { AuthUser } from '../../react/customHooks/CustomHooks';\n\nconst ProfilePage = ({\n  Users,\n  Posts,\n  setIsModalAvatarOpen,\n  isModalAvatarOpen,\n  putNewPhoto,\n  isModalAboutMeOpen,\n  setIsModalAboutMeOpen,\n  putInfoAboutMe,\n  id,\n  AuthUser\n} : {\nUsers: UserInfoType | null;\nPosts: PostsType;\nsetIsModalAvatarOpen?: React.Dispatch<React.SetStateAction<boolean>>;\nisModalAvatarOpen?: boolean;\nputNewPhoto?: (data: FormData) => void;\nisModalAboutMeOpen?: boolean;\nsetIsModalAboutMeOpen?: React.Dispatch<React.SetStateAction<boolean>>;\nputInfoAboutMe?: (data: FormData) => void;\nid: string;\nAuthUser: AuthUser\n}) => {\n  if (!Users) {\n    return <Loader />;\n  }\n  return (\n    <div>\n      <img src=\"https://klike.net/uploads/posts/2022-10/1666767724_3-30.jpg\" />\n      <ProfileInfo\n        Users={Users}\n        setIsModalAvatarOpen={setIsModalAvatarOpen}\n        isModalAvatarOpen={isModalAvatarOpen}\n        putNewPhoto={putNewPhoto}\n        setIsModalAboutMeOpen={setIsModalAboutMeOpen}\n        isModalAboutMeOpen={isModalAboutMeOpen}\n        putInfoAboutMe={putInfoAboutMe}\n        id={id}\n        AuthUser={AuthUser}\n      />\n      <ShitPostContainer />\n      <Post Posts={Posts} />\n    </div>\n  );\n};\n\nexport default ProfilePage;\n","import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport ProfilePage from './ProfilePage';\nimport Loader from '../Loader/Loader';\nimport {\n  axiosGetProfileById,\n  axiosPutPhoto,\n  axiosPutProfile,\n} from '../../API/API';\nimport { AppStateType } from '../../redux/reduxStore';\nimport { PostsType, UserInfoType } from '../../types/globalInterface';\nimport { useAuth } from '../../react/customHooks/CustomHooks';\n\nconst MyProfilePageContainer = ({ Posts }: { Posts: PostsType }) => {\n  const { id } = useParams();\n  const { user } = useAuth();\n  const [userf, setUserf] = useState<UserInfoType | null>(null);\n  const [isModalAvatarOpen, setIsModalAvatarOpen] = useState<boolean>(false);\n  const [isModalAboutMeOpen, setIsModalAboutMeOpen] = useState<boolean>(false);\n\n  useEffect(() => {\n    if (!id) {\n      return;\n  }\n    axiosGetProfileById(id).then((data) => {\n      setUserf(data);\n    });\n  }, [id, isModalAboutMeOpen, isModalAvatarOpen]);\n\n  const putNewPhoto = (data: FormData) => {\n    axiosPutPhoto(data);\n  };\n\n  const putInfoAboutMe = (data: FormData) => {\n    axiosPutProfile(data);\n  };\n\n  if (!user) {\n    return <Loader />;\n  }\n  return (\n    <div>\n      <ProfilePage\n        Posts={Posts}\n        Users={userf}\n        setIsModalAvatarOpen={setIsModalAvatarOpen}\n        isModalAvatarOpen={isModalAvatarOpen}\n        putNewPhoto={putNewPhoto}\n        putInfoAboutMe={putInfoAboutMe}\n        isModalAboutMeOpen={isModalAboutMeOpen}\n        setIsModalAboutMeOpen={setIsModalAboutMeOpen}\n        id={id?id:''}\n        AuthUser={user}\n      />\n    </div>\n  );\n};\n\nlet mapStateToProps = (state: AppStateType) => {\n  return {\n    Posts: state.ShitPosts.Posts,\n  };\n};\n\nconst ProfilePageContainer = connect(mapStateToProps)(MyProfilePageContainer);\n\nexport default ProfilePageContainer;\n"],"names":["React","_ref","post","Posts","map","_ref2","id","text","_jsx","className","c","children","ProfileStatus","confirmStatusChanges","cancelStatusChanges","editMode","status","setEditMode","authUserId","currentUserId","_useState","useState","_useState2","_slicedToArray","inputValue","setInputValue","useEffect","_Fragment","type","autoFocus","onBlur","onChange","e","target","value","onKeyDown","key","eventListener","onDoubleClick","ProfileStatusContainer","_useState3","_useState4","setStatus","useParams","user","useAuth","axiosGetStatus","then","data","axiosPutStatus","Loader","AvatarModal","setIsModalAvatarOpen","isModalAvatarOpen","putNewPhoto","Modal","FormData","formData","setFormData","closeModal","_jsxs","isOpen","onRequestClose","contentLabel","htmlFor","name","event","file","files","append","disabled","onClick","reduxForm","form","isModalAboutMeOpen","setIsModalAboutMeOpen","putInfoAboutMe","handleSubmit","onSubmit","Field","component","_Users$photos","Users","AuthUser","UC","contacts","src","photos","large","UnfoundAva","fullName","aboutMe","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","AboutMeModal","initialValues","addPost","formik","useFormik","newPost","values","resetForm","handleChange","placeholder","dirty","isSubmitting","connect","state","newPostLetter","ShitPosts","dispatch","addNewPost","ShitPost","ProfileInfo","ShitPostContainer","Post","ProfilePageContainer","userf","setUserf","_useState5","_useState6","axiosGetProfileById","ProfilePage","axiosPutPhoto","axiosPutProfile"],"sourceRoot":""}